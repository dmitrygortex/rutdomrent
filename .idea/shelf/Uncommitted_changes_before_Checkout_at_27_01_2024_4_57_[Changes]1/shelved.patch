Index: app/src/main/java/com/example/rutdomandroid/RegisterFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.rutdomandroid;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\n\r\nimport com.example.rutdomandroid.databinding.FragmentLoginBinding;\r\nimport com.example.rutdomandroid.databinding.FragmentRegisterBinding;\r\n\r\npublic class RegisterFragment extends Fragment {\r\n    FragmentRegisterBinding binding;\r\n    TextView loginLabel;\r\n    EditText editTextLogin;\r\n    EditText editTextFullName;\r\n    EditText editTextEmail;\r\n    EditText editTextPassword;\r\n    EditText editTextInstitute;\r\n    EditText editTextPhoneNumber;\r\n    Button buttonRegistration;\r\n\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        binding = FragmentRegisterBinding.inflate(inflater, container, false);\r\n        View view = binding.getRoot();\r\n        loginLabel = binding.loginLabel;\r\n        editTextLogin = binding.editTextLogin;\r\n        editTextFullName = binding.editTextFullName;\r\n        editTextInstitute = binding.editTextInstitute;\r\n        editTextPassword = binding.editTextPassword;\r\n        editTextPhoneNumber = binding.editTextPhoneNumber;\r\n        buttonRegistration = binding.button;\r\n\r\n        loginLabel.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                FragmentManager fragmentManager =requireActivity().getSupportFragmentManager();\r\n                fragmentManager.beginTransaction()\r\n                        .replace(R.id.frame_layout, new LoginFragment(), null)\r\n                        .setReorderingAllowed(true)\r\n                        .addToBackStack(\"name\") // Name can be null\r\n                        .commit();\r\n            }\r\n        });\r\n        buttonRegistration.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                \r\n            }\r\n        });\r\n\r\n        // Inflate the layout for this fragment\r\n        return view;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/rutdomandroid/RegisterFragment.java b/app/src/main/java/com/example/rutdomandroid/RegisterFragment.java
--- a/app/src/main/java/com/example/rutdomandroid/RegisterFragment.java	
+++ b/app/src/main/java/com/example/rutdomandroid/RegisterFragment.java	
@@ -2,30 +2,40 @@
 
 import android.os.Bundle;
 
+import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentManager;
 
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Button;
 import android.widget.EditText;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import com.example.rutdomandroid.databinding.FragmentLoginBinding;
 import com.example.rutdomandroid.databinding.FragmentRegisterBinding;
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
+import com.google.android.gms.tasks.Task;
+import com.google.firebase.auth.AuthResult;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.firestore.DocumentReference;
+import com.google.firebase.firestore.FirebaseFirestore;
+
+import java.util.HashMap;
+import java.util.Map;
 
 public class RegisterFragment extends Fragment {
     FragmentRegisterBinding binding;
-    TextView loginLabel;
-    EditText editTextLogin;
-    EditText editTextFullName;
-    EditText editTextEmail;
-    EditText editTextPassword;
-    EditText editTextInstitute;
-    EditText editTextPhoneNumber;
-    Button buttonRegistration;
+    FirebaseAuth mAuth;
+    FirebaseFirestore db;
 
+    Button loginButton;
 
 
     @Override
@@ -33,33 +43,86 @@
                              Bundle savedInstanceState) {
         binding = FragmentRegisterBinding.inflate(inflater, container, false);
         View view = binding.getRoot();
-        loginLabel = binding.loginLabel;
-        editTextLogin = binding.editTextLogin;
-        editTextFullName = binding.editTextFullName;
-        editTextInstitute = binding.editTextInstitute;
-        editTextPassword = binding.editTextPassword;
-        editTextPhoneNumber = binding.editTextPhoneNumber;
-        buttonRegistration = binding.button;
+        loginButton = binding.button;
+        mAuth = FirebaseAuth.getInstance();
+        db = FirebaseFirestore.getInstance();
 
-        loginLabel.setOnClickListener(new View.OnClickListener() {
+        loginButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                FragmentManager fragmentManager =requireActivity().getSupportFragmentManager();
-                fragmentManager.beginTransaction()
-                        .replace(R.id.frame_layout, new LoginFragment(), null)
-                        .setReorderingAllowed(true)
-                        .addToBackStack("name") // Name can be null
-                        .commit();
-            }
-        });
-        buttonRegistration.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                
-            }
-        });
+                String email = binding.emailText.getText().toString();
+                String password = binding.passwordText.getText().toString();
+                String name = binding.FIOText.getText().toString();
+                String institute = binding.institute.getText().toString();
+                if (email.isEmpty()) {
+                    Toast.makeText(getContext(), "Поле email  должно быть заполнено", Toast.LENGTH_SHORT).show();
+                    return;
+                }
+                if (password.length() < 8) {
+                    Toast.makeText(getContext(), "Минимальная длина пароля 8 символов", Toast.LENGTH_SHORT).show();
+
+                    return;
+                }
+                if (password.isEmpty()) {
+                    Toast.makeText(getContext(), "Поле Пароль должно быть заполнено", Toast.LENGTH_SHORT).show();
+                    return;
+                }
+                if (institute.isEmpty()) {
+                    Toast.makeText(getContext(), "Поле Институт должно быть заполнено", Toast.LENGTH_SHORT).show();
+                    return;
+                }
+                if (name.isEmpty()) {
+                    Toast.makeText(getContext(), "Поле ФИО должно быть заполнено", Toast.LENGTH_SHORT).show();
+                    return;
+                }
+                mAuth.createUserWithEmailAndPassword(email, password)
+                        .addOnCompleteListener(new OnCompleteListener<AuthResult>() {
+                            @Override
+                            public void onComplete(@NonNull Task<AuthResult> task) {
+                                if (task.isSuccessful()) {
+                                    FirebaseUser user = mAuth.getCurrentUser();
+                                    String uid = user.getUid();
+
+                                    Map<String, Object> userMap = new HashMap<>();
+                                    userMap.put("email", email);
+                                    userMap.put("password", password);
+                                    userMap.put("ФИО", name);
+                                    userMap.put("Институт", institute);
+
+                                    userMap.put("uid", uid);
+
+                                    db.collection("users").document(uid)
+                                            .set(userMap)
+                                            .addOnSuccessListener(new OnSuccessListener<Void>() {
+                                                @Override
+                                                public void onSuccess(Void unused) {
+                                                    Toast.makeText(inflater.getContext(), "Аккаунт создан.",
+                                                            Toast.LENGTH_SHORT).show();
+                                                    FragmentManager fragmentManager = requireActivity().getSupportFragmentManager();
+                                                    fragmentManager.beginTransaction()
+                                                            .replace(R.id.frame_layout, new InfoFragment(), null)
+                                                            .setReorderingAllowed(true)
+                                                            .addToBackStack("name")
+                                                            .commit();
+                                                }
+
+                                            }).addOnFailureListener(new OnFailureListener() {
+                                                @Override
+                                                public void onFailure(@NonNull Exception e) {
+                                                    Toast.makeText(getContext(), "Попробуйте еще раз",
+                                                            Toast.LENGTH_SHORT).show();
+                                                }
+                                            });
+                                } else {
+                                    // If sign in fails, display a message to the user.
+                                    Toast.makeText(getContext(), "Попробуйте еще раз.",
+                                            Toast.LENGTH_SHORT).show();
+                                }
+                            }
+                        });
+            }
 
-        // Inflate the layout for this fragment
+        });
         return view;
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/rutdomandroid/LoginFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.rutdomandroid;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.appcompat.widget.AppCompatButton;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\n\r\nimport com.example.rutdomandroid.databinding.FragmentLoginBinding;\r\n\r\n\r\npublic class LoginFragment extends Fragment {\r\n    FragmentLoginBinding binding;\r\n    TextView registerlabel;\r\n    Button loginButton;\r\n\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n\r\n            binding = FragmentLoginBinding.inflate(inflater, container, false);\r\n            View view = binding.getRoot();\r\n\r\n            registerlabel=(TextView) binding.createAccoutLabel;\r\n            loginButton=(Button)  binding.buttonLogin;\r\n        registerlabel.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                FragmentManager fragmentManager =requireActivity().getSupportFragmentManager();\r\n                fragmentManager.beginTransaction()\r\n                        .replace(R.id.frame_layout, new RegisterFragment(), null)\r\n                        .setReorderingAllowed(true)\r\n                        .addToBackStack(\"name\")\r\n                        .commit();\r\n            }\r\n        });\r\n        loginButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                FragmentManager fragmentManager =requireActivity().getSupportFragmentManager();\r\n                fragmentManager.beginTransaction()\r\n                        .replace(R.id.frame_layout, new InfoFragment(), null)\r\n                        .setReorderingAllowed(true)\r\n                        .addToBackStack(\"name\")\r\n                        .commit();\r\n            }\r\n        });\r\n\r\n        return view;\r\n    }\r\n\r\n\r\n    }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/rutdomandroid/LoginFragment.java b/app/src/main/java/com/example/rutdomandroid/LoginFragment.java
--- a/app/src/main/java/com/example/rutdomandroid/LoginFragment.java	
+++ b/app/src/main/java/com/example/rutdomandroid/LoginFragment.java	
@@ -1,25 +1,42 @@
 package com.example.rutdomandroid;
 
+import static androidx.constraintlayout.helper.widget.MotionEffect.TAG;
+
 import android.os.Bundle;
 
+import androidx.annotation.NonNull;
 import androidx.appcompat.widget.AppCompatButton;
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentManager;
 import androidx.fragment.app.FragmentTransaction;
 
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Button;
+import android.widget.EditText;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import com.example.rutdomandroid.databinding.FragmentLoginBinding;
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
+import com.google.android.gms.tasks.Task;
+import com.google.firebase.auth.AuthResult;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.firestore.DocumentSnapshot;
 
 
 public class LoginFragment extends Fragment {
     FragmentLoginBinding binding;
+    FirebaseAuth auth;
     TextView registerlabel;
     Button loginButton;
+    EditText email_text,password_text;
+    String email,password;
 
 
 
@@ -27,18 +44,21 @@
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
 
-            binding = FragmentLoginBinding.inflate(inflater, container, false);
-            View view = binding.getRoot();
-
-            registerlabel=(TextView) binding.createAccoutLabel;
-            loginButton=(Button)  binding.buttonLogin;
+        binding = FragmentLoginBinding.inflate(inflater, container, false);
+        View view = binding.getRoot();
+        auth = FirebaseAuth.getInstance();
+        registerlabel=(TextView) binding.createAccoutLabel;
+        loginButton=  binding.loginButton;
+        email_text=binding.emailSignIn;
+        password_text=binding.passwordSignIn;
         registerlabel.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
+
                 FragmentManager fragmentManager =requireActivity().getSupportFragmentManager();
                 fragmentManager.beginTransaction()
                         .replace(R.id.frame_layout, new RegisterFragment(), null)
-                        .setReorderingAllowed(true)
+                        .setReorderingAllowed(false)
                         .addToBackStack("name")
                         .commit();
             }
@@ -46,12 +66,49 @@
         loginButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                FragmentManager fragmentManager =requireActivity().getSupportFragmentManager();
-                fragmentManager.beginTransaction()
-                        .replace(R.id.frame_layout, new InfoFragment(), null)
-                        .setReorderingAllowed(true)
-                        .addToBackStack("name")
-                        .commit();
+                String email = binding.emailSignIn.getText().toString();
+                String password = binding.passwordSignIn.getText().toString();
+
+                if (email.isEmpty()) {
+                    Toast.makeText(getContext(), "Поле email  должно быть заполнено", Toast.LENGTH_SHORT).show();
+                    return;
+                }
+                if (password.length() < 8) {
+                    Toast.makeText(getContext(), "Минимальная длина пароля 8 символов", Toast.LENGTH_SHORT).show();
+
+                    return;
+                }
+                if (password.isEmpty()) {
+                    Toast.makeText(getContext(), "Поле Пароль должно быть заполнено", Toast.LENGTH_SHORT).show();
+                    return;
+                }
+
+                auth.signInWithEmailAndPassword(email, password)
+                        .addOnCompleteListener(new OnCompleteListener<AuthResult>() {
+                            @Override
+                            public void onComplete(@NonNull Task<AuthResult> task) {
+
+                                if (auth.getCurrentUser() != null) {
+                                    Toast.makeText(getContext(), "Вы вошли в аккаунт.",
+                                            Toast.LENGTH_SHORT).show();
+                                    FragmentManager fragmentManager = requireActivity().getSupportFragmentManager();
+                                    fragmentManager.beginTransaction()
+                                            .replace(R.id.frame_layout, new InfoFragment(), null)
+                                            .setReorderingAllowed(true)
+                                            .addToBackStack("name")
+                                            .commit();
+                                }
+                                else Toast.makeText(getContext(), "Аккаунт не существует.",
+                                        Toast.LENGTH_SHORT).show();
+                            }
+                        }).addOnFailureListener(new OnFailureListener() {
+                            @Override
+                            public void onFailure(@NonNull Exception e) {
+                                Toast.makeText(getContext(), "Что-то пошло не так.",
+                                        Toast.LENGTH_SHORT).show();
+                            }
+                        });
+
             }
         });
 
@@ -59,4 +116,4 @@
     }
 
 
-    }
\ No newline at end of file
+}
\ No newline at end of file
